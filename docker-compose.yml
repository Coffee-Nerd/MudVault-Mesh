version: '3.8'

services:
  mudvault:
    build: .
    container_name: mudvault-gateway
    ports:
      - "8080:8080"  # HTTP API
      - "8081:8081"  # WebSocket
    environment:
      - NODE_ENV=production
      - PORT=8080
      - WS_PORT=8081
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-key}
      - JWT_EXPIRES_IN=7d
      - LOG_LEVEL=info
      - MUD_NAME=MudVault Mesh Gateway
      - MUD_ADMIN_EMAIL=admin@yourdomain.com
      - ALLOWED_ORIGINS=*
      - TRUST_PROXY=true
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - mudvault-logs:/app/logs
    networks:
      - mudvault-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/api/v1/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: mudvault-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - mudvault-redis-data:/data
    networks:
      - mudvault-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: mudvault-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - mudvault-logs:/var/log/mudvault
    depends_on:
      - mudvault
    networks:
      - mudvault-network
    restart: unless-stopped

volumes:
  mudvault-redis-data:
    driver: local
  mudvault-logs:
    driver: local

networks:
  mudvault-network:
    driver: bridge